// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockFileReader is an autogenerated mock type for the FileReader type
type MockFileReader struct {
	mock.Mock
}

type MockFileReader_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFileReader) EXPECT() *MockFileReader_Expecter {
	return &MockFileReader_Expecter{mock: &_m.Mock}
}

// Ext provides a mock function with no fields
func (_m *MockFileReader) Ext() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Ext")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// MockFileReader_Ext_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Ext'
type MockFileReader_Ext_Call struct {
	*mock.Call
}

// Ext is a helper method to define mock.On call
func (_e *MockFileReader_Expecter) Ext() *MockFileReader_Ext_Call {
	return &MockFileReader_Ext_Call{Call: _e.mock.On("Ext")}
}

func (_c *MockFileReader_Ext_Call) Run(run func()) *MockFileReader_Ext_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *MockFileReader_Ext_Call) Return(_a0 string) *MockFileReader_Ext_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFileReader_Ext_Call) RunAndReturn(run func() string) *MockFileReader_Ext_Call {
	_c.Call.Return(run)
	return _c
}

// ReadText provides a mock function with given fields: path
func (_m *MockFileReader) ReadText(path string) (string, error) {
	ret := _m.Called(path)

	if len(ret) == 0 {
		panic("no return value specified for ReadText")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (string, error)); ok {
		return rf(path)
	}
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(path)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(path)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockFileReader_ReadText_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ReadText'
type MockFileReader_ReadText_Call struct {
	*mock.Call
}

// ReadText is a helper method to define mock.On call
//   - path string
func (_e *MockFileReader_Expecter) ReadText(path interface{}) *MockFileReader_ReadText_Call {
	return &MockFileReader_ReadText_Call{Call: _e.mock.On("ReadText", path)}
}

func (_c *MockFileReader_ReadText_Call) Run(run func(path string)) *MockFileReader_ReadText_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockFileReader_ReadText_Call) Return(_a0 string, _a1 error) *MockFileReader_ReadText_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockFileReader_ReadText_Call) RunAndReturn(run func(string) (string, error)) *MockFileReader_ReadText_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFileReader creates a new instance of MockFileReader. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFileReader(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFileReader {
	mock := &MockFileReader{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
